{"version":3,"sources":["webpack:///static/js/0.5fe59225de85e691b020.js","webpack:///editor.vue","webpack:///editor.vue?8764","webpack:///./src/components/editor.vue?9344","webpack:///./src/views/editor.vue?92c3","webpack:///./src/components/editor.vue?ce97","webpack:///./src/views/editor.vue?beaa","webpack:///./~/marked/lib/marked.js","webpack:///./src/components/editor.vue?dec8","webpack:///./src/views/editor.vue?73dc","webpack:///./src/components/editor.vue","webpack:///./src/views/editor.vue"],"names":["webpackJsonp","93","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_marked","_marked2","renderer","Renderer","styleList","title","h1","h2","h3","h4","paragraph","image","wrap","img","txt","blockquote","quote","list","item","point","heading","text","level","style","url","_styleList$image","textHtml","_styleList$blockquote","body","ordered","console","log","listitem","_styleList$list$item","undefined","data","input","filters","marked","markRender","val","methods","setStyle","event","target","attributes","nodeValue","ready","$","el","document","querySelector","height","clientHeight","94","_editor","_editor2","test","components","editor","141","push","id","version","sources","names","mappings","file","sourcesContent","sourceRoot","142","145","content","locals","148","151","global","Lexer","options","this","tokens","links","defaults","rules","block","normal","gfm","tables","InlineLexer","inline","Error","breaks","pedantic","Parser","token","escape","html","encode","replace","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","regex","opt","source","self","name","RegExp","noop","merge","key","i","arguments","length","prototype","hasOwnProperty","call","src","callback","pending","highlight","lex","e","done","err","out","parse","type","lang","code","escaped","message","silent","newline","fences","hr","nptable","lheading","def","table","bullet","_tag","lexer","top","bq","next","loose","cap","bull","b","space","l","exec","depth","header","split","align","cells","match","indexOf","smartLists","slice","join","sanitize","pre","sanitizer","href","charCodeAt","autolink","tag","link","reflink","nolink","strong","em","br","del","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","ch","Math","random","toString","langPrefix","raw","headerPrefix","xhtml","tablerow","tablecell","flags","prot","decodeURIComponent","parser","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","inlineLexer","window","199","200","206","__vue_script__","__vue_template__","template","207"],"mappings":"AAAAA,cAAc,EAAE,IAEVC,GACA,SAASC,EAAQC,EAASC,GAE/B,YAUA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GARvFG,OAAOC,eAAeP,EAAS,cAC7BQ,OAAO,GC6BV,IAAAC,GAAAR,EAAA,KDxBKS,EAAWR,EAAuBO,GCyBvCE,EAAA,GAAAD,cAAAE,SACAC,GDpBGC,OACEC,GCsBL,uEDrBKC,GCsBL,sEDrBKC,GCsBL,sEDrBKC,GCuBL,qDDrBGC,UCsBH,mGDrBGC,OACEC,KCsBL,yEDrBKC,ICsBL,4CDrBKC,ICuBL,2FDrBGC,YACEH,KCsBL,6JDrBKI,MCsBL,mHDrBKF,ICuBL,kEDrBGG,MACEL,KCsBL,gNDrBKM,MACEN,KCsBP,oDDrBOO,MCsBP,8DDrBOL,ICyBP,kDAEAZ,GAAAkB,QAAA,SAAAC,EAAAC,GDpBG,GAAIC,GCsBP,EDrBG,QCsBHD,GDrBK,ICsBL,GDrBOC,EAAQnB,EAAUC,MCsBzBC,EACA,MDrBK,KCsBL,GDrBOiB,EAAQnB,EAAUC,MCsBzBE,EACA,MDrBK,KCsBL,GDrBOgB,EAAQnB,EAAUC,MCsBzBG,EACA,MDrBK,KCsBL,GDrBOe,EAAQnB,EAAUC,MCsBzBI,EACA,MACA,SDrBOc,EAAQnB,EAAUC,MCsBzBE,GDlBG,MAAO,KAAOe,EAAQ,WAAaC,EAAQ,KAAOF,EAAO,MAAQC,ECsBpE,KAEApB,EAAAQ,UAAA,SAAAW,GDpBG,GAAIE,GAAQnB,ECsBfM,SDrBG,OAAO,YAAca,EAAQ,IAAMF,ECsBtC,QAEAnB,EAAAS,MAAA,SAAAa,EAAAnB,EAAAgB,GACA,GAAAI,GAAArB,EACAO,MDrBOC,EAAOa,EAAiBb,KACxBC,EAAMY,EAAiBZ,IACvBC,EAAMW,EAAiBX,IAEvBY,ECkBP,EDhBG,OADOA,GAAPL,EAAkB,eAAiBP,EAAM,IAAMO,EAAO,UCkBzD,GDjBU,YAAcT,EAAO,aAAeY,EAAM,UAAYX,EAAM,IAAMa,ECkB5E,QAEAxB,EAAAa,WAAA,SAAAM,GACA,GAAAM,GAAAvB,EACAW,WDjBOH,EAAOe,EAAsBf,KAC7BI,EAAQW,EAAsBX,MAC9BF,EAAMa,EAAsBb,GAEhC,OAAO,qBAAuBF,EAAO,kBAAoBI,EAAQ,wBAA0BF,EAAM,IAAMO,ECc1G,sBAEAnB,EAAAe,KAAA,SAAAW,EAAAC,GDZG,GAAIN,GAAQnB,EAAUa,KCczBL,IDZG,OADAiB,GAAUC,QAAQC,IAAI,GAAKD,QAAQC,ICctC,GDbU,YAAcR,EAAQ,IAAMK,ECctC,QACA1B,EAAA8B,SAAA,SAAAf,GACA,GAAAgB,GAAA7B,EAAAa,KACAC,KDbON,EAAOqB,EAAqBrB,KAC5BO,EAAQc,EAAqBd,MAC7BL,EAAMmB,EAAqBnB,GAG/B,OADAgB,SCUHC,IAAAG,QDTU,eAAiBtB,EAAO,gBAAkBO,EAAQ,wBAA0BL,EAAM,IAAMG,ECUlG,WDPC1B,cACE4C,KAAM,WACJ,OACEC,MCWP,KDPGC,SCUHC,OAAArC,aDRKsC,WAAY,SAAoBC,GAC9B,OAAO,EAAIvC,cAAkBuC,GAC3BtC,SCUTA,MDNGuC,SACEC,SAAU,SAAkBC,GAC1Bb,QAAQC,IAAIY,EAAMC,OAAOC,WCShC,IDROzC,EAAUC,MAAMC,GAAKqC,EAAMC,OAAOC,WAAW,GCSpDC,YDNGC,MAAO,WACL,GAAIC,GAAI,SAAWC,GACjB,MAAOC,UAASC,cCQvBF,GDNKD,GAAE,SAASzB,MAAM6B,OAASJ,EAAE,gBAAgBzB,MAAM6B,OAASF,SAAStB,KAAKyB,aCO9E,QDDMC,GACA,SAAShE,EAAQC,EAASC,GAE/B,YAUA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GARvFG,OAAOC,eAAeP,EAAS,cAC7BQ,OAAO,GE9IV,IAAAwD,GAAA/D,EAAA,KFmJKgE,EAAW/D,EAAuB8D,EAItChE,eACE4C,KAAM,WACJ,OACEsB,KErJP,SFyJGC,YErJHC,OAAAH,gBF4JMI,IACA,SAAStE,EAAQC,EAASC,GG3KhCD,EAAAD,EAAAC,QAAAC,EAAA,MAKAD,EAAAsE,MAAAvE,EAAAwE,GAAA,gXAAuY,IAAQC,QAAA,EAAAC,SAAA,gCAAAC,SAAAC,SAAA,wJAAAC,KAAA,aAAAC,gBAAA,mXAAynBC,WAAA,iBHoLlgCC,IACA,SAAShF,EAAQC,EAASC,GI1LhCD,EAAAD,EAAAC,QAAAC,EAAA,MAKAD,EAAAsE,MAAAvE,EAAAwE,GAAA,gBAAuC,IAAQC,QAAA,EAAAC,SAAA,2BAAAC,SAAAC,SAAA,uBAAAC,KAAA,aAAAC,gBAAA,4DAA4LC,WAAA,iBJmMrOE,IACA,SAASjF,EAAQC,EAASC,GKtMhC,GAAAgF,GAAAhF,EAAA,IACA,iBAAAgF,SAAAlF,EAAAwE,GAAAU,EAAA,KAEAhF,GAAA,IAAAgF,KACAA,GAAAC,SAAAnF,EAAAC,QAAAiF,EAAAC,SL4NMC,IACA,SAASpF,EAAQC,EAASC,GMjOhC,GAAAgF,GAAAhF,EAAA,IACA,iBAAAgF,SAAAlF,EAAAwE,GAAAU,EAAA,KAEAhF,GAAA,IAAAgF,KACAA,GAAAC,SAAAnF,EAAAC,QAAAiF,EAAAC,SNuPME,IACA,SAASrF,EAAQC,EAASC,IO/PhC,SAAAoF,IAMC,WA+FD,QAAAC,GAAAC,GACAC,KAAAC,UACAD,KAAAC,OAAAC,SACAF,KAAAD,WAAAxC,EAAA4C,SACAH,KAAAI,MAAAC,EAAAC,OAEAN,KAAAD,QAAAQ,MACAP,KAAAD,QAAAS,OACAR,KAAAI,MAAAC,EAAAG,OAEAR,KAAAI,MAAAC,EAAAE,KAwZA,QAAAE,GAAAP,EAAAH,GAOA,GANAC,KAAAD,WAAAxC,EAAA4C,SACAH,KAAAE,QACAF,KAAAI,MAAAM,EAAAJ,OACAN,KAAA7E,SAAA6E,KAAAD,QAAA5E,UAAA,GAAAC,GACA4E,KAAA7E,SAAA4E,QAAAC,KAAAD,SAEAC,KAAAE,MACA,SACAS,OAAA,4CAGAX,MAAAD,QAAAQ,IACAP,KAAAD,QAAAa,OACAZ,KAAAI,MAAAM,EAAAE,OAEAZ,KAAAI,MAAAM,EAAAH,IAEGP,KAAAD,QAAAc,WACHb,KAAAI,MAAAM,EAAAG,UA6NA,QAAAzF,GAAA2E,GACAC,KAAAD,cAkJA,QAAAe,GAAAf,GACAC,KAAAC,UACAD,KAAAe,MAAA,KACAf,KAAAD,WAAAxC,EAAA4C,SACAH,KAAAD,QAAA5E,SAAA6E,KAAAD,QAAA5E,UAAA,GAAAC,GACA4E,KAAA7E,SAAA6E,KAAAD,QAAA5E,SACA6E,KAAA7E,SAAA4E,QAAAC,KAAAD,QA8KA,QAAAiB,GAAAC,EAAAC,GACA,MAAAD,GACAE,QAAAD,EAAkC,KAAlC,eAAkC,SAClCC,QAAA,aACAA,QAAA,aACAA,QAAA,eACAA,QAAA,cAGA,QAAAC,GAAAH,GAEA,MAAAA,GAAAE,QAAA,4CAA8D,SAAAE,EAAAC,GAE9D,MADAA,KAAAC,cACA,UAAAD,EAAA,IACA,MAAAA,EAAAE,OAAA,GACA,MAAAF,EAAAE,OAAA,GACAC,OAAAC,aAAAC,SAAAL,EAAAM,UAAA,QACAH,OAAAC,cAAAJ,EAAAM,UAAA,IAEA,KAIA,QAAAT,GAAAU,EAAAC,GAGA,MAFAD,KAAAE,OACAD,KAAA,GACA,QAAAE,GAAAC,EAAAxE,GACA,MAAAwE,IACAxE,IAAAsE,QAAAtE,EACAA,IAAA0D,QAAA,qBACAU,IAAAV,QAAAc,EAAAxE,GACAuE,GAJA,GAAAE,QAAAL,EAAAC,IAQA,QAAAK,MAGA,QAAAC,GAAAzH,GAKA,IAJA,GACAkD,GACAwE,EAFAC,EAAA,EAIQA,EAAAC,UAAAC,OAAsBF,IAAA,CAC9BzE,EAAA0E,UAAAD,EACA,KAAAD,IAAAxE,GACA/C,OAAA2H,UAAAC,eAAAC,KAAA9E,EAAAwE,KACA1H,EAAA0H,GAAAxE,EAAAwE,IAKA,MAAA1H,GAQA,QAAA4C,GAAAqF,EAAAd,EAAAe,GACA,GAAAA,GAAA,kBAAAf,GAAA,CACAe,IACAA,EAAAf,EACAA,EAAA,MAGAA,EAAAM,KAAkB7E,EAAA4C,SAAA2B,MAElB,IACA7B,GACA6C,EAFAC,EAAAjB,EAAAiB,UAGAT,EAAA,CAEA,KACArC,EAAAH,EAAAkD,IAAAJ,EAAAd,GACK,MAAAmB,GACL,MAAAJ,GAAAI,GAGAH,EAAA7C,EAAAuC,MAEA,IAAAU,GAAA,SAAAC,GACA,GAAAA,EAEA,MADArB,GAAAiB,YACAF,EAAAM,EAGA,IAAAC,EAEA,KACAA,EAAAtC,EAAAuC,MAAApD,EAAA6B,GACO,MAAAmB,GACPE,EAAAF,EAKA,MAFAnB,GAAAiB,YAEAI,EACAN,EAAAM,GACAN,EAAA,KAAAO,GAGA,KAAAL,KAAAP,OAAA,EACA,MAAAU,IAKA,UAFApB,GAAAiB,WAEAD,EAAA,MAAAI,IAEA,MAAUZ,EAAArC,EAAAuC,OAAmBF,KAC7B,SAAAvB,GACA,eAAAA,EAAAuC,OACAR,GAAAI,IAEAH,EAAAhC,EAAAzE,KAAAyE,EAAAwC,KAAA,SAAAJ,EAAAK,GACA,MAAAL,GAAAD,EAAAC,GACA,MAAAK,OAAAzC,EAAAzE,OACAwG,GAAAI,KAEAnC,EAAAzE,KAAAkH,EACAzC,EAAA0C,SAAA,SACAX,GAAAI,SAEOjD,EAAAqC,QAKP,KAEA,MADAR,OAAAM,KAA2B7E,EAAA4C,SAAA2B,IAC3BhB,EAAAuC,MAAAvD,EAAAkD,IAAAJ,EAAAd,MACG,MAAAmB,GAEH,GADAA,EAAAS,SAAA,2DACA5B,GAAAvE,EAAA4C,UAAAwD,OACA,sCACA3C,EAAAiC,EAAAS,QAAA,OACA,QAEA,MAAAT,IA9rCA,GAAA5C,IACAuD,QAAA,OACAJ,KAAA,oBACAK,OAAA1B,EACA2B,GAAA,4BACAzH,QAAA,wCACA0H,QAAA5B,EACA6B,SAAA,oCACAhI,WAAA,qCACAE,KAAA,gEACA+E,KAAA,+EACAgD,IAAA,oEACAC,MAAA/B,EACAxG,UAAA,iEACAW,KAAA,UAGA+D,GAAA8D,OAAA,kBACA9D,EAAAlE,KAAA,6CACAkE,EAAAlE,KAAAgF,EAAAd,EAAAlE,KAAA,MACA,QAAAkE,EAAA8D,UAGA9D,EAAAnE,KAAAiF,EAAAd,EAAAnE,MACA,QAAAmE,EAAA8D,QACA,8CACA,gBAAA9D,EAAA4D,IAAAlC,OAAA,OAGA1B,EAAArE,WAAAmF,EAAAd,EAAArE,YACA,MAAAqE,EAAA4D,OAGA5D,EAAA+D,KAAA,qKAKA/D,EAAAY,KAAAE,EAAAd,EAAAY,MACA,6BACA,iCACA,+CACA,OAAAZ,EAAA+D,QAGA/D,EAAA1E,UAAAwF,EAAAd,EAAA1E,WACA,KAAA0E,EAAAyD,IACA,UAAAzD,EAAAhE,SACA,WAAAgE,EAAA2D,UACA,aAAA3D,EAAArE,YACA,UAAAqE,EAAA+D,MACA,MAAA/D,EAAA4D,OAOA5D,EAAAC,OAAA8B,KAAuB/B,GAMvBA,EAAAE,IAAA6B,KAAoB/B,EAAAC,QACpBuD,OAAA,6DACAlI,UAAA,IACAU,QAAA,0CAGAgE,EAAAE,IAAA5E,UAAAwF,EAAAd,EAAA1E,WACA,YACA0E,EAAAE,IAAAsD,OAAA9B,OAAAZ,QAAA,iBACAd,EAAAnE,KAAA6F,OAAAZ,QAAA,oBAOAd,EAAAG,OAAA4B,KAAuB/B,EAAAE,KACvBwD,QAAA,gEACAG,MAAA,8DA0BApE,EAAAM,MAAAC,EAMAP,EAAAkD,IAAA,SAAAJ,EAAA7C,GACA,GAAAsE,GAAA,GAAAvE,GAAAC,EACA,OAAAsE,GAAArB,IAAAJ,IAOA9C,EAAA2C,UAAAO,IAAA,SAAAJ,GAOA,MANAA,KACAzB,QAAA,iBACAA,QAAA,cACAA,QAAA,eACAA,QAAA,gBAEAnB,KAAAe,MAAA6B,GAAA,IAOA9C,EAAA2C,UAAA1B,MAAA,SAAA6B,EAAA0B,EAAAC,GAYA,IAXA,GACAC,GACAC,EACAC,EACAC,EACAC,EACAzI,EACA0I,EACAvC,EACAwC,EATAlC,IAAAzB,QAAA,aAWAyB,GAYA,IAVA8B,EAAA1E,KAAAI,MAAAwD,QAAAmB,KAAAnC,MACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAkC,EAAA,GAAAlC,OAAA,GACAxC,KAAAC,OAAAnB,MACAwE,KAAA,WAMAoB,EAAA1E,KAAAI,MAAAoD,KAAAuB,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAkC,IAAA,GAAAvD,QAAA,UAAiC,IACjCnB,KAAAC,OAAAnB,MACAwE,KAAA,OACAhH,KAAA0D,KAAAD,QAAAc,SAEA6D,EADAA,EAAAvD,QAAA,iBAOA,IAAAuD,EAAA1E,KAAAI,MAAAyD,OAAAkB,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAxC,KAAAC,OAAAnB,MACAwE,KAAA,OACAC,KAAAmB,EAAA,GACApI,KAAAoI,EAAA,aAMA,IAAAA,EAAA1E,KAAAI,MAAA/D,QAAA0I,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAxC,KAAAC,OAAAnB,MACAwE,KAAA,UACA0B,MAAAN,EAAA,GAAAlC,OACAlG,KAAAoI,EAAA,SAMA,IAAAJ,IAAAI,EAAA1E,KAAAI,MAAA2D,QAAAgB,KAAAnC,IAAA,CAUA,IATAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QAEArG,GACAmH,KAAA,QACA2B,OAAAP,EAAA,GAAAvD,QAAA,mBAAA+D,MAAA,UACAC,MAAAT,EAAA,GAAAvD,QAAA,iBAAA+D,MAAA,UACAE,MAAAV,EAAA,GAAAvD,QAAA,UAAA+D,MAAA,OAGA5C,EAAA,EAAiBA,EAAAnG,EAAAgJ,MAAA3C,OAAuBF,IACxC,YAAA5D,KAAAvC,EAAAgJ,MAAA7C,IACAnG,EAAAgJ,MAAA7C,GAAA,QACS,aAAA5D,KAAAvC,EAAAgJ,MAAA7C,IACTnG,EAAAgJ,MAAA7C,GAAA,SACS,YAAA5D,KAAAvC,EAAAgJ,MAAA7C,IACTnG,EAAAgJ,MAAA7C,GAAA,OAEAnG,EAAAgJ,MAAA7C,GAAA,IAIA,KAAAA,EAAA,EAAiBA,EAAAnG,EAAAiJ,MAAA5C,OAAuBF,IACxCnG,EAAAiJ,MAAA9C,GAAAnG,EAAAiJ,MAAA9C,GAAA4C,MAAA,SAGAlF,MAAAC,OAAAnB,KAAA3C,OAMA,IAAAuI,EAAA1E,KAAAI,MAAA4D,SAAAe,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAxC,KAAAC,OAAAnB,MACAwE,KAAA,UACA0B,MAAA,MAAAN,EAAA,OACApI,KAAAoI,EAAA,SAMA,IAAAA,EAAA1E,KAAAI,MAAA0D,GAAAiB,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAxC,KAAAC,OAAAnB,MACAwE,KAAA,WAMA,IAAAoB,EAAA1E,KAAAI,MAAApE,WAAA+I,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QAEAxC,KAAAC,OAAAnB,MACAwE,KAAA,qBAGAoB,IAAA,GAAAvD,QAAA,eAKAnB,KAAAe,MAAA2D,EAAAJ,GAAA,GAEAtE,KAAAC,OAAAnB,MACAwE,KAAA,uBAOA,IAAAoB,EAAA1E,KAAAI,MAAAlE,KAAA6I,KAAAnC,GAAA,CAgBA,IAfAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAmC,EAAAD,EAAA,GAEA1E,KAAAC,OAAAnB,MACAwE,KAAA,aACAxG,QAAA6H,EAAAnC,OAAA,IAIAkC,IAAA,GAAAW,MAAArF,KAAAI,MAAAjE,MAEAqI,GAAA,EACAM,EAAAJ,EAAAlC,OACAF,EAAA,EAEYA,EAAAwC,EAAOxC,IACnBnG,EAAAuI,EAAApC,GAIAuC,EAAA1I,EAAAqG,OACArG,IAAAgF,QAAA,0BAIAhF,EAAAmJ,QAAA,SACAT,GAAA1I,EAAAqG,OACArG,EAAA6D,KAAAD,QAAAc,SAEA1E,EAAAgF,QAAA,YAAmC,IADnChF,EAAAgF,QAAA,GAAAe,QAAA,QAA0C2C,EAAA,IAAgB,WAM1D7E,KAAAD,QAAAwF,YAAAjD,IAAAwC,EAAA,IACAF,EAAAvE,EAAA8D,OAAAY,KAAAL,EAAApC,EAAA,OACAqC,IAAAC,GAAAD,EAAAnC,OAAA,GAAAoC,EAAApC,OAAA,IACAI,EAAA8B,EAAAc,MAAAlD,EAAA,GAAAmD,KAAA,MAAA7C,EACAN,EAAAwC,EAAA,IAOAL,EAAAD,GAAA,eAAA9F,KAAAvC,GACAmG,IAAAwC,EAAA,IACAN,EAAA,OAAArI,EAAAqF,OAAArF,EAAAqG,OAAA,GACAiC,MAAAD,IAGAxE,KAAAC,OAAAnB,MACAwE,KAAAmB,EACA,mBACA,oBAIAzE,KAAAe,MAAA5E,GAAA,EAAAoI,GAEAvE,KAAAC,OAAAnB,MACAwE,KAAA,iBAIAtD,MAAAC,OAAAnB,MACAwE,KAAA,iBAOA,IAAAoB,EAAA1E,KAAAI,MAAAa,KAAA8D,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAxC,KAAAC,OAAAnB,MACAwE,KAAAtD,KAAAD,QAAA2F,SACA,YACA,OACAC,KAAA3F,KAAAD,QAAA6F,YACA,QAAAlB,EAAA,eAAAA,EAAA,cAAAA,EAAA,IACApI,KAAAoI,EAAA,SAMA,KAAAH,GAAAD,IAAAI,EAAA1E,KAAAI,MAAA6D,IAAAc,KAAAnC,IACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAxC,KAAAC,OAAAC,MAAAwE,EAAA,GAAAnD,gBACAsE,KAAAnB,EAAA,GACApJ,MAAAoJ,EAAA,QAMA,IAAAJ,IAAAI,EAAA1E,KAAAI,MAAA8D,MAAAa,KAAAnC,IAAA,CAUA,IATAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QAEArG,GACAmH,KAAA,QACA2B,OAAAP,EAAA,GAAAvD,QAAA,mBAAA+D,MAAA,UACAC,MAAAT,EAAA,GAAAvD,QAAA,iBAAA+D,MAAA,UACAE,MAAAV,EAAA,GAAAvD,QAAA,qBAAA+D,MAAA,OAGA5C,EAAA,EAAiBA,EAAAnG,EAAAgJ,MAAA3C,OAAuBF,IACxC,YAAA5D,KAAAvC,EAAAgJ,MAAA7C,IACAnG,EAAAgJ,MAAA7C,GAAA,QACS,aAAA5D,KAAAvC,EAAAgJ,MAAA7C,IACTnG,EAAAgJ,MAAA7C,GAAA,SACS,YAAA5D,KAAAvC,EAAAgJ,MAAA7C,IACTnG,EAAAgJ,MAAA7C,GAAA,OAEAnG,EAAAgJ,MAAA7C,GAAA,IAIA,KAAAA,EAAA,EAAiBA,EAAAnG,EAAAiJ,MAAA5C,OAAuBF,IACxCnG,EAAAiJ,MAAA9C,GAAAnG,EAAAiJ,MAAA9C,GACAnB,QAAA,uBACA+D,MAAA,SAGAlF,MAAAC,OAAAnB,KAAA3C,OAMA,IAAAmI,IAAAI,EAAA1E,KAAAI,MAAAzE,UAAAoJ,KAAAnC,IACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAxC,KAAAC,OAAAnB,MACAwE,KAAA,YACAhH,KAAA,OAAAoI,EAAA,GAAAlD,OAAAkD,EAAA,GAAAlC,OAAA,GACAkC,EAAA,GAAAc,MAAA,MACAd,EAAA,SAMA,IAAAA,EAAA1E,KAAAI,MAAA9D,KAAAyI,KAAAnC,GAEAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAxC,KAAAC,OAAAnB,MACAwE,KAAA,OACAhH,KAAAoI,EAAA,SAKA,IAAA9B,EACA,SACAjC,OAAA,0BAAAiC,EAAAkD,WAAA,GAIA,OAAA9F,MAAAC,OAOA,IAAAS,IACAM,OAAA,8BACA+E,SAAA,2BACAtJ,IAAA0F,EACA6D,IAAA,yDACAC,KAAA,0BACAC,QAAA,iCACAC,OAAA,mCACAC,OAAA,iDACAC,GAAA,wDACA7C,KAAA,mCACA8C,GAAA,mBACAC,IAAApE,EACA7F,KAAA,qCAGAoE,GAAA8F,QAAA,yCACA9F,EAAA+F,MAAA,iDAEA/F,EAAAuF,KAAA9E,EAAAT,EAAAuF,MACA,SAAAvF,EAAA8F,SACA,OAAA9F,EAAA+F,SAGA/F,EAAAwF,QAAA/E,EAAAT,EAAAwF,SACA,SAAAxF,EAAA8F,WAOA9F,EAAAJ,OAAA8B,KAAwB1B,GAMxBA,EAAAG,SAAAuB,KAA0B1B,EAAAJ,QAC1B8F,OAAA,iEACAC,GAAA,6DAOA3F,EAAAH,IAAA6B,KAAqB1B,EAAAJ,QACrBU,OAAAG,EAAAT,EAAAM,QAAA,eACAvE,IAAA,uCACA8J,IAAA,0BACAjK,KAAA6E,EAAAT,EAAApE,MACA,YACA,uBAQAoE,EAAAE,OAAAwB,KAAwB1B,EAAAH,KACxB+F,GAAAnF,EAAAT,EAAA4F,IAAA,OAA8B,OAC9BhK,KAAA6E,EAAAT,EAAAH,IAAAjE,MAAA,OAAsC,SAkCtCmE,EAAAL,MAAAM,EAMAD,EAAAiG,OAAA,SAAA9D,EAAA1C,EAAAH,GACA,GAAAW,GAAA,GAAAD,GAAAP,EAAAH,EACA,OAAAW,GAAAgG,OAAA9D,IAOAnC,EAAAgC,UAAAiE,OAAA,SAAA9D,GAOA,IANA,GACAqD,GACA3J,EACAuJ,EACAnB,EAJAtB,EAAA,GAMAR,GAEA,GAAA8B,EAAA1E,KAAAI,MAAAY,OAAA+D,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAY,GAAAsB,EAAA,OAKA,IAAAA,EAAA1E,KAAAI,MAAA2F,SAAAhB,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACA,MAAAkC,EAAA,IACApI,EAAA,MAAAoI,EAAA,GAAAlD,OAAA,GACAxB,KAAA2G,OAAAjC,EAAA,GAAA9C,UAAA,IACA5B,KAAA2G,OAAAjC,EAAA,IACAmB,EAAA7F,KAAA2G,OAAA,WAAArK,IAEAA,EAAA0E,EAAA0D,EAAA,IACAmB,EAAAvJ,GAEA8G,GAAApD,KAAA7E,SAAA8K,KAAAJ,EAAA,KAAAvJ,OAKA,IAAA0D,KAAA4G,UAAAlC,EAAA1E,KAAAI,MAAA3D,IAAAsI,KAAAnC,KASA,GAAA8B,EAAA1E,KAAAI,MAAA4F,IAAAjB,KAAAnC,IACA5C,KAAA4G,QAAA,QAAAlI,KAAAgG,EAAA,IACA1E,KAAA4G,QAAA,EACO5G,KAAA4G,QAAA,UAAAlI,KAAAgG,EAAA,MACP1E,KAAA4G,QAAA,GAEAhE,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAY,GAAApD,KAAAD,QAAA2F,SACA1F,KAAAD,QAAA6F,UACA5F,KAAAD,QAAA6F,UAAAlB,EAAA,IACA1D,EAAA0D,EAAA,IACAA,EAAA,OAKA,IAAAA,EAAA1E,KAAAI,MAAA6F,KAAAlB,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAxC,KAAA4G,QAAA,EACAxD,GAAApD,KAAA6G,WAAAnC,GACAmB,KAAAnB,EAAA,GACApJ,MAAAoJ,EAAA,KAEA1E,KAAA4G,QAAA,MAKA,KAAAlC,EAAA1E,KAAAI,MAAA8F,QAAAnB,KAAAnC,MACA8B,EAAA1E,KAAAI,MAAA+F,OAAApB,KAAAnC,IADA,CAKA,GAHAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAyD,GAAAvB,EAAA,IAAAA,EAAA,IAAAvD,QAAA,YACA8E,EAAAjG,KAAAE,MAAA+F,EAAA1E,gBACA0E,MAAAJ,KAAA,CACAzC,GAAAsB,EAAA,GAAAlD,OAAA,GACAoB,EAAA8B,EAAA,GAAA9C,UAAA,GAAAgB,CACA,UAEA5C,KAAA4G,QAAA,EACAxD,GAAApD,KAAA6G,WAAAnC,EAAAuB,GACAjG,KAAA4G,QAAA,MAKA,IAAAlC,EAAA1E,KAAAI,MAAAgG,OAAArB,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAY,GAAApD,KAAA7E,SAAAiL,OAAApG,KAAA0G,OAAAhC,EAAA,IAAAA,EAAA,SAKA,IAAAA,EAAA1E,KAAAI,MAAAiG,GAAAtB,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAY,GAAApD,KAAA7E,SAAAkL,GAAArG,KAAA0G,OAAAhC,EAAA,IAAAA,EAAA,SAKA,IAAAA,EAAA1E,KAAAI,MAAAoD,KAAAuB,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAY,GAAApD,KAAA7E,SAAA2L,SAAA9F,EAAA0D,EAAA,YAKA,IAAAA,EAAA1E,KAAAI,MAAAkG,GAAAvB,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAY,GAAApD,KAAA7E,SAAAmL,SAKA,IAAA5B,EAAA1E,KAAAI,MAAAmG,IAAAxB,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAY,GAAApD,KAAA7E,SAAAoL,IAAAvG,KAAA0G,OAAAhC,EAAA,SAKA,IAAAA,EAAA1E,KAAAI,MAAA9D,KAAAyI,KAAAnC,GACAA,IAAAhB,UAAA8C,EAAA,GAAAlC,QACAY,GAAApD,KAAA7E,SAAAmB,KAAA0E,EAAAhB,KAAA+G,YAAArC,EAAA,UAIA,IAAA9B,EACA,SACAjC,OAAA,0BAAAiC,EAAAkD,WAAA,QAhGAlD,KAAAhB,UAAA8C,EAAA,GAAAlC,QACAlG,EAAA0E,EAAA0D,EAAA,IACAmB,EAAAvJ,EACA8G,GAAApD,KAAA7E,SAAA8K,KAAAJ,EAAA,KAAAvJ,EAiGA,OAAA8G,IAOA3C,EAAAgC,UAAAoE,WAAA,SAAAnC,EAAAuB,GACA,GAAAJ,GAAA7E,EAAAiF,EAAAJ,MACAvK,EAAA2K,EAAA3K,MAAA0F,EAAAiF,EAAA3K,OAAA,IAEA,aAAAoJ,EAAA,GAAAlD,OAAA,GACAxB,KAAA7E,SAAA8K,KAAAJ,EAAAvK,EAAA0E,KAAA0G,OAAAhC,EAAA,KACA1E,KAAA7E,SAAAS,MAAAiK,EAAAvK,EAAA0F,EAAA0D,EAAA,MAOAjE,EAAAgC,UAAAsE,YAAA,SAAAzK,GACA,MAAA0D,MAAAD,QAAAgH,YACAzK,EAEA6E,QAAA,YAEAA,QAAA,WAEAA,QAAA,2BAA8B,OAE9BA,QAAA,UAEAA,QAAA,gCAA8B,OAE9BA,QAAA,UAEAA,QAAA,SAAmB,KAfnB7E,GAsBAmE,EAAAgC,UAAAkE,OAAA,SAAArK,GACA,IAAA0D,KAAAD,QAAA4G,OAAA,MAAArK,EAMA,KALA,GAGA0K,GAHA5D,EAAA,GACA0B,EAAAxI,EAAAkG,OACAF,EAAA,EAGQA,EAAAwC,EAAOxC,IACf0E,EAAA1K,EAAAwJ,WAAAxD,GACA2E,KAAAC,SAAA,KACAF,EAAA,IAAAA,EAAAG,SAAA,KAEA/D,GAAA,KAAA4D,EAAA,GAGA,OAAA5D,IAWAhI,EAAAqH,UAAAe,KAAA,SAAAA,EAAAD,EAAAE,GACA,GAAAzD,KAAAD,QAAAgD,UAAA,CACA,GAAAK,GAAApD,KAAAD,QAAAgD,UAAAS,EAAAD,EACA,OAAAH,OAAAI,IACAC,GAAA,EACAD,EAAAJ,GAIA,MAAAG,GAMA,qBACAvD,KAAAD,QAAAqH,WACApG,EAAAuC,GAAA,GACA,MACAE,EAAAD,EAAAxC,EAAAwC,GAAA,IACA,oBAVA,eACAC,EAAAD,EAAAxC,EAAAwC,GAAA,IACA,mBAWApI,EAAAqH,UAAAzG,WAAA,SAAAC,GACA,uBAAAA,EAAA,mBAGAb,EAAAqH,UAAAxB,KAAA,SAAAA,GACA,MAAAA,IAGA7F,EAAAqH,UAAApG,QAAA,SAAAC,EAAAC,EAAA8K,GACA,WACA9K,EACA,QACAyD,KAAAD,QAAAuH,aACAD,EAAA9F,cAAAJ,QAAA,eACA,KACA7E,EACA,MACAC,EACA,OAGAnB,EAAAqH,UAAAqB,GAAA,WACA,MAAA9D,MAAAD,QAAAwH,MAAA,oBAGAnM,EAAAqH,UAAAvG,KAAA,SAAAW,EAAAC,GACA,GAAAwG,GAAAxG,EAAA,SACA,WAAAwG,EAAA,MAAAzG,EAAA,KAAAyG,EAAA,OAGAlI,EAAAqH,UAAAxF,SAAA,SAAAX,GACA,aAAAA,EAAA,WAGAlB,EAAAqH,UAAA9G,UAAA,SAAAW,GACA,YAAAA,EAAA,UAGAlB,EAAAqH,UAAAyB,MAAA,SAAAe,EAAApI,GACA,2BAEAoI,EACA,sBAEApI,EACA,wBAIAzB,EAAAqH,UAAA+E,SAAA,SAAA/H,GACA,eAAAA,EAAA,WAGArE,EAAAqH,UAAAgF,UAAA,SAAAhI,EAAAiI,GACA,GAAApE,GAAAoE,EAAAzC,OAAA,UACAe,EAAA0B,EAAAvC,MACA,IAAA7B,EAAA,sBAAAoE,EAAAvC,MAAA,KACA,IAAA7B,EAAA,GACA,OAAA0C,GAAAvG,EAAA,KAAA6D,EAAA,OAIAlI,EAAAqH,UAAA2D,OAAA,SAAA9J,GACA,iBAAAA,EAAA,aAGAlB,EAAAqH,UAAA4D,GAAA,SAAA/J,GACA,aAAAA,EAAA,SAGAlB,EAAAqH,UAAAqE,SAAA,SAAAxK,GACA,eAAAA,EAAA,WAGAlB,EAAAqH,UAAA6D,GAAA,WACA,MAAAtG,MAAAD,QAAAwH,MAAA,gBAGAnM,EAAAqH,UAAA8D,IAAA,SAAAjK,GACA,cAAAA,EAAA,UAGAlB,EAAAqH,UAAAwD,KAAA,SAAAJ,EAAAvK,EAAAgB,GACA,GAAA0D,KAAAD,QAAA2F,SAAA,CACA,IACA,GAAAiC,GAAAC,mBAAAxG,EAAAyE,IACA1E,QAAA,cACAI,cACK,MAAA0B,GACL,SAEA,OAAA0E,EAAArC,QAAA,oBAAAqC,EAAArC,QAAA,aACA,SAGA,GAAAlC,GAAA,YAAAyC,EAAA,GAKA,OAJAvK,KACA8H,GAAA,WAAA9H,EAAA,KAEA8H,GAAA,IAAA9G,EAAA,QAIAlB,EAAAqH,UAAA7G,MAAA,SAAAiK,EAAAvK,EAAAgB,GACA,GAAA8G,GAAA,aAAAyC,EAAA,UAAAvJ,EAAA,GAKA,OAJAhB,KACA8H,GAAA,WAAA9H,EAAA,KAEA8H,GAAApD,KAAAD,QAAAwH,MAAA,UAIAnM,EAAAqH,UAAAnG,KAAA,SAAAA,GACA,MAAAA,IAoBAwE,EAAAuC,MAAA,SAAAT,EAAA7C,EAAA5E,GACA,GAAA0M,GAAA,GAAA/G,GAAAf,EAAA5E,EACA,OAAA0M,GAAAxE,MAAAT,IAOA9B,EAAA2B,UAAAY,MAAA,SAAAT,GACA5C,KAAAU,OAAA,GAAAD,GAAAmC,EAAA1C,MAAAF,KAAAD,QAAAC,KAAA7E,UACA6E,KAAAC,OAAA2C,EAAAkF,SAGA,KADA,GAAA1E,GAAA,GACApD,KAAAwE,QACApB,GAAApD,KAAA+H,KAGA,OAAA3E,IAOAtC,EAAA2B,UAAA+B,KAAA,WACA,MAAAxE,MAAAe,MAAAf,KAAAC,OAAA+H,OAOAlH,EAAA2B,UAAAwF,KAAA,WACA,MAAAjI,MAAAC,OAAAD,KAAAC,OAAAuC,OAAA,OAOA1B,EAAA2B,UAAAyF,UAAA,WAGA,IAFA,GAAArL,GAAAmD,KAAAe,MAAAzE,KAEA,SAAA0D,KAAAiI,OAAA3E,MACAzG,GAAA,KAAAmD,KAAAwE,OAAAlI,IAGA,OAAA0D,MAAAU,OAAAgG,OAAA7J,IAOAiE,EAAA2B,UAAAsF,IAAA,WACA,OAAA/H,KAAAe,MAAAuC,MACA,YACA,QAEA,UACA,MAAAtD,MAAA7E,SAAA2I,IAEA,eACA,MAAA9D,MAAA7E,SAAAkB,QACA2D,KAAAU,OAAAgG,OAAA1G,KAAAe,MAAAzE,MACA0D,KAAAe,MAAAiE,MACAhF,KAAAe,MAAAzE,KAEA,YACA,MAAA0D,MAAA7E,SAAAqI,KAAAxD,KAAAe,MAAAzE,KACA0D,KAAAe,MAAAwC,KACAvD,KAAAe,MAAA0C,QAEA,aACA,GAEAnB,GACA6F,EACAC,EACAV,EACAW,EANApD,EAAA,GACApI,EAAA,EASA,KADAuL,EAAA,GACA9F,EAAA,EAAiBA,EAAAtC,KAAAe,MAAAkE,OAAAzC,OAA8BF,IAC/CoF,GAAiBzC,QAAA,EAAAE,MAAAnF,KAAAe,MAAAoE,MAAA7C,IACjB8F,GAAApI,KAAA7E,SAAAsM,UACAzH,KAAAU,OAAAgG,OAAA1G,KAAAe,MAAAkE,OAAA3C,KACW2C,QAAA,EAAAE,MAAAnF,KAAAe,MAAAoE,MAAA7C,IAKX,KAFA2C,GAAAjF,KAAA7E,SAAAqM,SAAAY,GAEA9F,EAAA,EAAiBA,EAAAtC,KAAAe,MAAAqE,MAAA5C,OAA6BF,IAAA,CAI9C,IAHA6F,EAAAnI,KAAAe,MAAAqE,MAAA9C,GAEA8F,EAAA,GACAC,EAAA,EAAmBA,EAAAF,EAAA3F,OAAgB6F,IACnCD,GAAApI,KAAA7E,SAAAsM,UACAzH,KAAAU,OAAAgG,OAAAyB,EAAAE,KACapD,QAAA,EAAAE,MAAAnF,KAAAe,MAAAoE,MAAAkD,IAIbxL,IAAAmD,KAAA7E,SAAAqM,SAAAY,GAEA,MAAApI,MAAA7E,SAAA+I,MAAAe,EAAApI,EAEA,wBAGA,IAFA,GAAAA,GAAA,GAEA,mBAAAmD,KAAAwE,OAAAlB,MACAzG,GAAAmD,KAAA+H,KAGA,OAAA/H,MAAA7E,SAAAa,WAAAa,EAEA,kBAIA,IAHA,GAAAA,GAAA,GACAC,EAAAkD,KAAAe,MAAAjE,QAEA,aAAAkD,KAAAwE,OAAAlB,MACAzG,GAAAmD,KAAA+H,KAGA,OAAA/H,MAAA7E,SAAAe,KAAAW,EAAAC,EAEA,uBAGA,IAFA,GAAAD,GAAA,GAEA,kBAAAmD,KAAAwE,OAAAlB,MACAzG,GAAA,SAAAmD,KAAAe,MAAAuC,KACAtD,KAAAkI,YACAlI,KAAA+H,KAGA,OAAA/H,MAAA7E,SAAA8B,SAAAJ,EAEA,wBAGA,IAFA,GAAAA,GAAA,GAEA,kBAAAmD,KAAAwE,OAAAlB,MACAzG,GAAAmD,KAAA+H,KAGA,OAAA/H,MAAA7E,SAAA8B,SAAAJ,EAEA,YACA,GAAAoE,GAAAjB,KAAAe,MAAA4E,KAAA3F,KAAAD,QAAAc,SAEAb,KAAAe,MAAAzE,KADA0D,KAAAU,OAAAgG,OAAA1G,KAAAe,MAAAzE,KAEA,OAAA0D,MAAA7E,SAAA8F,OAEA,iBACA,MAAAjB,MAAA7E,SAAAQ,UAAAqE,KAAAU,OAAAgG,OAAA1G,KAAAe,MAAAzE,MAEA,YACA,MAAA0D,MAAA7E,SAAAQ,UAAAqE,KAAAkI,eA6CA/F,EAAA4C,KAAA5C,EAgHA5E,EAAAwC,QACAxC,EAAA+K,WAAA,SAAAxG,GAEA,MADAM,GAAA7E,EAAA4C,SAAA2B,GACAvE,GAGAA,EAAA4C,UACAI,KAAA,EACAC,QAAA,EACAI,QAAA,EACAC,UAAA,EACA6E,UAAA,EACAE,UAAA,KACAe,QAAA,EACApB,YAAA,EACA5B,QAAA,EACAZ,UAAA,KACAqE,WAAA,QACAL,aAAA,EACAO,aAAA,GACAnM,SAAA,GAAAC,GACAmM,OAAA,GAOAhK,EAAAuD,SACAvD,EAAAsK,OAAA/G,EAAAuC,MAEA9F,EAAAnC,WAEAmC,EAAAuC,QACAvC,EAAA8G,MAAAvE,EAAAkD,IAEAzF,EAAAkD,cACAlD,EAAAgL,YAAA9H,EAAAiG,OAEAnJ,EAAA8F,MAAA9F,EAGAhD,EAAAC,QAAA+C,IAOCoF,KAAA,WACD,MAAA3C,QAAA,mBAAAwI,eAAA3I,SPoQ8B8C,KAAKnI,EAAU,WAAa,MAAOwF,WAI3DyI,IACA,SAASlO,EAAQC,GQ7gDvBD,EAAAC,QAAA,yMRmhDMkO,IACA,SAASnO,EAAQC,GSphDvBD,EAAAC,QAAA,uBT0hDMmO,IACA,SAASpO,EAAQC,EAASC,GU3hDhC,GAAAmO,GAAAC,CACApO,GAAA,KACAmO,EAAAnO,EAAA,IACAoO,EAAApO,EAAA,KACAF,EAAAC,QAAAoO,MACArO,EAAAC,QAAAI,aAAAL,EAAAC,QAAAD,EAAAC,QAAAD,YACAsO,KACA,kBAAAtO,GAAAC,QAAAD,EAAAC,QAAAuF,UAAAxF,EAAAC,QAAAuF,YAA+FxF,EAAAC,SAAAsO,SAAAD,IVmiDzFE,IACA,SAASxO,EAAQC,EAASC,GW3iDhC,GAAAmO,GAAAC,CACApO,GAAA,KACAmO,EAAAnO,EAAA,IACAoO,EAAApO,EAAA,KACAF,EAAAC,QAAAoO,MACArO,EAAAC,QAAAI,aAAAL,EAAAC,QAAAD,EAAAC,QAAAD,YACAsO,KACA,kBAAAtO,GAAAC,QAAAD,EAAAC,QAAAuF,UAAAxF,EAAAC,QAAAuF,YAA+FxF,EAAAC,SAAAsO,SAAAD","file":"static/js/0.5fe59225de85e691b020.js","sourcesContent":["webpackJsonp([0,2],{\n\n/***/ 93:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _marked = __webpack_require__(151);\n\t\n\tvar _marked2 = _interopRequireDefault(_marked);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar renderer = new _marked2.default.Renderer();\n\tvar styleList = {\n\t  title: {\n\t    h1: 'text-align:center;font-size:20px;margin-top:50px;margin-bottom:20px;',\n\t    h2: 'text-align:center;font-size:18px;margin-top:50px;margin-bottom:20px',\n\t    h3: 'text-align:center;font-size:16px;margin-top:40px;margin-bottom:10px',\n\t    h4: 'text-align:center;font-size:14px;margin-top:50px;'\n\t  },\n\t  paragraph: 'font-size:15px;color:#777;line-height:1.75;text-align:justify;margin-top:30px;margin-bottom:30px',\n\t  image: {\n\t    wrap: 'padding:0.05rem;border-width:1px;border-style:solid;border-color:#ccc;',\n\t    img: 'width:100%;height:auto;vertical-align:top',\n\t    txt: 'color:#ccc;font-size:.7rem;text-align:center;line-height:1.5;margin:1px 0;display:block'\n\t  },\n\t  blockquote: {\n\t    wrap: 'background:#e7e7e7;color:#666;padding:20px;padding-top:10px;padding-bottom:10px;margin:0;font-size:14px;line-height:1.5;overflow:hidden;margin-bottom:30px',\n\t    quote: 'font-size:50px;height:30px;margin-top:10px;color:#aaa9a9;font-family:Georgia,serif;float:left;margin-right:10px;',\n\t    txt: 'display:block;overflow:hidden;color:#979797;text-align:justify'\n\t  },\n\t  list: {\n\t    wrap: 'text-align:justify;margin-top:30px;margin-bottom:30px;font-size:14px;color:#999;background:#fafafa;padding:10px;padding-left:20px;padding-right:20px;border-width:6px;border-style:solid;border-color:#ececec',\n\t    item: {\n\t      wrap: 'display:block;margin-top:20px;margin-bottom:20px;',\n\t      point: 'display:block;float:left;line-height:1.5;margin-right:10px;',\n\t      txt: 'overflow:hidden;line-height:1.5;display:block'\n\t    }\n\t\n\t  }\n\t};\n\t\n\trenderer.heading = function (text, level) {\n\t  var style = '';\n\t  switch (level) {\n\t    case 1:\n\t      style = styleList.title.h1;\n\t      break;\n\t    case 2:\n\t      style = styleList.title.h2;\n\t      break;\n\t    case 3:\n\t      style = styleList.title.h3;\n\t      break;\n\t    case 4:\n\t      style = styleList.title.h4;\n\t      break;\n\t    default:\n\t      style = styleList.title.h2;\n\t      break;\n\t  }\n\t\n\t  return '<h' + level + ' style=\"' + style + '\">' + text + '</h' + level + '>';\n\t};\n\t\n\trenderer.paragraph = function (text) {\n\t  var style = styleList.paragraph;\n\t  return '<p style=' + style + '>' + text + '</p>';\n\t};\n\t\n\trenderer.image = function (url, title, text) {\n\t  var _styleList$image = styleList.image;\n\t  var wrap = _styleList$image.wrap;\n\t  var img = _styleList$image.img;\n\t  var txt = _styleList$image.txt;\n\t\n\t  var textHtml = '';\n\t  text ? textHtml = '<span style=' + txt + '>' + text + '</span>' : textHtml = '';\n\t  return '<p style=' + wrap + '><img src=' + url + ' style=' + img + '>' + textHtml + '</p>';\n\t};\n\t\n\trenderer.blockquote = function (text) {\n\t  var _styleList$blockquote = styleList.blockquote;\n\t  var wrap = _styleList$blockquote.wrap;\n\t  var quote = _styleList$blockquote.quote;\n\t  var txt = _styleList$blockquote.txt;\n\t\n\t  return '<blockquote style=' + wrap + '><strong style=' + quote + '>“</strong><em style=' + txt + '>' + text + '</em></blockqoute>';\n\t};\n\t\n\trenderer.list = function (body, ordered) {\n\t  var style = styleList.list.wrap;\n\t  ordered ? console.log(1) : console.log(2);\n\t  return '<p style=' + style + '>' + body + '</p>';\n\t};\n\trenderer.listitem = function (list) {\n\t  var _styleList$list$item = styleList.list.item;\n\t  var wrap = _styleList$list$item.wrap;\n\t  var point = _styleList$list$item.point;\n\t  var txt = _styleList$list$item.txt;\n\t\n\t  console.log(undefined);\n\t  return '<span style=' + wrap + '><span style=' + point + '>・</span><span style=' + txt + '>' + list + '</span>';\n\t};\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      input: ''\n\t    };\n\t  },\n\t\n\t  filters: {\n\t    marked: _marked2.default,\n\t    markRender: function markRender(val) {\n\t      return (0, _marked2.default)(val, {\n\t        renderer: renderer\n\t      });\n\t    }\n\t  },\n\t  methods: {\n\t    setStyle: function setStyle(event) {\n\t      console.log(event.target.attributes[1]);\n\t      styleList.title.h1 = event.target.attributes[1].nodeValue;\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    var $ = function $(el) {\n\t      return document.querySelector(el);\n\t    };\n\t    $('.html').style.height = $('.editorinput').style.height = document.body.clientHeight + 'px';\n\t  }\n\t};\n\n/***/ },\n\n/***/ 94:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _editor = __webpack_require__(206);\n\t\n\tvar _editor2 = _interopRequireDefault(_editor);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      test: 'test'\n\t    };\n\t  },\n\t\n\t  components: {\n\t    editor: _editor2.default\n\t  }\n\t};\n\n/***/ },\n\n/***/ 141:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(33)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".editor{width:100%;height:100%}.editor .editor-editarea{display:-webkit-box}.editor .editor-editarea textarea.editorinput{width:50%;display:block;border:1px solid #ccc;-webkit-box-flex:1;padding:20px}.editor .editor-editarea .html{width:50%;border:1px solid #000;-webkit-box-flex:1;padding:0 20px;overflow-y:scroll}.editor .editor-header{height:160px;display:block}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/editor.vue\"],\"names\":[],\"mappings\":\"AAAA,QAAQ,WAAW,WAAW,CAAC,yBAAyB,mBAAmB,CAAC,8CAA8C,UAAU,cAAc,sBAAsB,mBAAmB,YAAY,CAAC,+BAA+B,UAAU,sBAAsB,mBAAmB,eAAe,iBAAiB,CAAC,uBAAuB,aAAa,aAAa,CAAC\",\"file\":\"editor.vue\",\"sourcesContent\":[\".editor{width:100%;height:100%}.editor .editor-editarea{display:-webkit-box}.editor .editor-editarea textarea.editorinput{width:50%;display:block;border:1px solid #ccc;-webkit-box-flex:1;padding:20px}.editor .editor-editarea .html{width:50%;border:1px solid #000;-webkit-box-flex:1;padding:0 20px;overflow-y:scroll}.editor .editor-header{height:160px;display:block}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 142:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(33)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"p{color:#000}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/editor.vue\"],\"names\":[],\"mappings\":\"AAiBA,EACE,UAAW,CACZ\",\"file\":\"editor.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\np{\\n  color:#000;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 145:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(141);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(35)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/sass-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/sass-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 148:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(142);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(35)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 151:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * marked - a markdown parser\n\t * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n\t * https://github.com/chjj/marked\n\t */\n\t\n\t;(function() {\n\t\n\t/**\n\t * Block-Level Grammar\n\t */\n\t\n\tvar block = {\n\t  newline: /^\\n+/,\n\t  code: /^( {4}[^\\n]+\\n*)+/,\n\t  fences: noop,\n\t  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n\t  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n\t  nptable: noop,\n\t  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n\t  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n\t  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n\t  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n\t  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n\t  table: noop,\n\t  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n\t  text: /^[^\\n]+/\n\t};\n\t\n\tblock.bullet = /(?:[*+-]|\\d+\\.)/;\n\tblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\n\tblock.item = replace(block.item, 'gm')\n\t  (/bull/g, block.bullet)\n\t  ();\n\t\n\tblock.list = replace(block.list)\n\t  (/bull/g, block.bullet)\n\t  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n\t  ('def', '\\\\n+(?=' + block.def.source + ')')\n\t  ();\n\t\n\tblock.blockquote = replace(block.blockquote)\n\t  ('def', block.def)\n\t  ();\n\t\n\tblock._tag = '(?!(?:'\n\t  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n\t  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n\t  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\t\n\tblock.html = replace(block.html)\n\t  ('comment', /<!--[\\s\\S]*?-->/)\n\t  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n\t  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n\t  (/tag/g, block._tag)\n\t  ();\n\t\n\tblock.paragraph = replace(block.paragraph)\n\t  ('hr', block.hr)\n\t  ('heading', block.heading)\n\t  ('lheading', block.lheading)\n\t  ('blockquote', block.blockquote)\n\t  ('tag', '<' + block._tag)\n\t  ('def', block.def)\n\t  ();\n\t\n\t/**\n\t * Normal Block Grammar\n\t */\n\t\n\tblock.normal = merge({}, block);\n\t\n\t/**\n\t * GFM Block Grammar\n\t */\n\t\n\tblock.gfm = merge({}, block.normal, {\n\t  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n\t  paragraph: /^/,\n\t  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n\t});\n\t\n\tblock.gfm.paragraph = replace(block.paragraph)\n\t  ('(?!', '(?!'\n\t    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n\t    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n\t  ();\n\t\n\t/**\n\t * GFM + Tables Block Grammar\n\t */\n\t\n\tblock.tables = merge({}, block.gfm, {\n\t  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n\t  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n\t});\n\t\n\t/**\n\t * Block Lexer\n\t */\n\t\n\tfunction Lexer(options) {\n\t  this.tokens = [];\n\t  this.tokens.links = {};\n\t  this.options = options || marked.defaults;\n\t  this.rules = block.normal;\n\t\n\t  if (this.options.gfm) {\n\t    if (this.options.tables) {\n\t      this.rules = block.tables;\n\t    } else {\n\t      this.rules = block.gfm;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Expose Block Rules\n\t */\n\t\n\tLexer.rules = block;\n\t\n\t/**\n\t * Static Lex Method\n\t */\n\t\n\tLexer.lex = function(src, options) {\n\t  var lexer = new Lexer(options);\n\t  return lexer.lex(src);\n\t};\n\t\n\t/**\n\t * Preprocessing\n\t */\n\t\n\tLexer.prototype.lex = function(src) {\n\t  src = src\n\t    .replace(/\\r\\n|\\r/g, '\\n')\n\t    .replace(/\\t/g, '    ')\n\t    .replace(/\\u00a0/g, ' ')\n\t    .replace(/\\u2424/g, '\\n');\n\t\n\t  return this.token(src, true);\n\t};\n\t\n\t/**\n\t * Lexing\n\t */\n\t\n\tLexer.prototype.token = function(src, top, bq) {\n\t  var src = src.replace(/^ +$/gm, '')\n\t    , next\n\t    , loose\n\t    , cap\n\t    , bull\n\t    , b\n\t    , item\n\t    , space\n\t    , i\n\t    , l;\n\t\n\t  while (src) {\n\t    // newline\n\t    if (cap = this.rules.newline.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      if (cap[0].length > 1) {\n\t        this.tokens.push({\n\t          type: 'space'\n\t        });\n\t      }\n\t    }\n\t\n\t    // code\n\t    if (cap = this.rules.code.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      cap = cap[0].replace(/^ {4}/gm, '');\n\t      this.tokens.push({\n\t        type: 'code',\n\t        text: !this.options.pedantic\n\t          ? cap.replace(/\\n+$/, '')\n\t          : cap\n\t      });\n\t      continue;\n\t    }\n\t\n\t    // fences (gfm)\n\t    if (cap = this.rules.fences.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      this.tokens.push({\n\t        type: 'code',\n\t        lang: cap[2],\n\t        text: cap[3] || ''\n\t      });\n\t      continue;\n\t    }\n\t\n\t    // heading\n\t    if (cap = this.rules.heading.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      this.tokens.push({\n\t        type: 'heading',\n\t        depth: cap[1].length,\n\t        text: cap[2]\n\t      });\n\t      continue;\n\t    }\n\t\n\t    // table no leading pipe (gfm)\n\t    if (top && (cap = this.rules.nptable.exec(src))) {\n\t      src = src.substring(cap[0].length);\n\t\n\t      item = {\n\t        type: 'table',\n\t        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n\t        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n\t        cells: cap[3].replace(/\\n$/, '').split('\\n')\n\t      };\n\t\n\t      for (i = 0; i < item.align.length; i++) {\n\t        if (/^ *-+: *$/.test(item.align[i])) {\n\t          item.align[i] = 'right';\n\t        } else if (/^ *:-+: *$/.test(item.align[i])) {\n\t          item.align[i] = 'center';\n\t        } else if (/^ *:-+ *$/.test(item.align[i])) {\n\t          item.align[i] = 'left';\n\t        } else {\n\t          item.align[i] = null;\n\t        }\n\t      }\n\t\n\t      for (i = 0; i < item.cells.length; i++) {\n\t        item.cells[i] = item.cells[i].split(/ *\\| */);\n\t      }\n\t\n\t      this.tokens.push(item);\n\t\n\t      continue;\n\t    }\n\t\n\t    // lheading\n\t    if (cap = this.rules.lheading.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      this.tokens.push({\n\t        type: 'heading',\n\t        depth: cap[2] === '=' ? 1 : 2,\n\t        text: cap[1]\n\t      });\n\t      continue;\n\t    }\n\t\n\t    // hr\n\t    if (cap = this.rules.hr.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      this.tokens.push({\n\t        type: 'hr'\n\t      });\n\t      continue;\n\t    }\n\t\n\t    // blockquote\n\t    if (cap = this.rules.blockquote.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t\n\t      this.tokens.push({\n\t        type: 'blockquote_start'\n\t      });\n\t\n\t      cap = cap[0].replace(/^ *> ?/gm, '');\n\t\n\t      // Pass `top` to keep the current\n\t      // \"toplevel\" state. This is exactly\n\t      // how markdown.pl works.\n\t      this.token(cap, top, true);\n\t\n\t      this.tokens.push({\n\t        type: 'blockquote_end'\n\t      });\n\t\n\t      continue;\n\t    }\n\t\n\t    // list\n\t    if (cap = this.rules.list.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      bull = cap[2];\n\t\n\t      this.tokens.push({\n\t        type: 'list_start',\n\t        ordered: bull.length > 1\n\t      });\n\t\n\t      // Get each top-level item.\n\t      cap = cap[0].match(this.rules.item);\n\t\n\t      next = false;\n\t      l = cap.length;\n\t      i = 0;\n\t\n\t      for (; i < l; i++) {\n\t        item = cap[i];\n\t\n\t        // Remove the list item's bullet\n\t        // so it is seen as the next token.\n\t        space = item.length;\n\t        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\t\n\t        // Outdent whatever the\n\t        // list item contains. Hacky.\n\t        if (~item.indexOf('\\n ')) {\n\t          space -= item.length;\n\t          item = !this.options.pedantic\n\t            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n\t            : item.replace(/^ {1,4}/gm, '');\n\t        }\n\t\n\t        // Determine whether the next list item belongs here.\n\t        // Backpedal if it does not belong in this list.\n\t        if (this.options.smartLists && i !== l - 1) {\n\t          b = block.bullet.exec(cap[i + 1])[0];\n\t          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n\t            src = cap.slice(i + 1).join('\\n') + src;\n\t            i = l - 1;\n\t          }\n\t        }\n\t\n\t        // Determine whether item is loose or not.\n\t        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n\t        // for discount behavior.\n\t        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\t        if (i !== l - 1) {\n\t          next = item.charAt(item.length - 1) === '\\n';\n\t          if (!loose) loose = next;\n\t        }\n\t\n\t        this.tokens.push({\n\t          type: loose\n\t            ? 'loose_item_start'\n\t            : 'list_item_start'\n\t        });\n\t\n\t        // Recurse.\n\t        this.token(item, false, bq);\n\t\n\t        this.tokens.push({\n\t          type: 'list_item_end'\n\t        });\n\t      }\n\t\n\t      this.tokens.push({\n\t        type: 'list_end'\n\t      });\n\t\n\t      continue;\n\t    }\n\t\n\t    // html\n\t    if (cap = this.rules.html.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      this.tokens.push({\n\t        type: this.options.sanitize\n\t          ? 'paragraph'\n\t          : 'html',\n\t        pre: !this.options.sanitizer\n\t          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n\t        text: cap[0]\n\t      });\n\t      continue;\n\t    }\n\t\n\t    // def\n\t    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n\t      src = src.substring(cap[0].length);\n\t      this.tokens.links[cap[1].toLowerCase()] = {\n\t        href: cap[2],\n\t        title: cap[3]\n\t      };\n\t      continue;\n\t    }\n\t\n\t    // table (gfm)\n\t    if (top && (cap = this.rules.table.exec(src))) {\n\t      src = src.substring(cap[0].length);\n\t\n\t      item = {\n\t        type: 'table',\n\t        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n\t        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n\t        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n\t      };\n\t\n\t      for (i = 0; i < item.align.length; i++) {\n\t        if (/^ *-+: *$/.test(item.align[i])) {\n\t          item.align[i] = 'right';\n\t        } else if (/^ *:-+: *$/.test(item.align[i])) {\n\t          item.align[i] = 'center';\n\t        } else if (/^ *:-+ *$/.test(item.align[i])) {\n\t          item.align[i] = 'left';\n\t        } else {\n\t          item.align[i] = null;\n\t        }\n\t      }\n\t\n\t      for (i = 0; i < item.cells.length; i++) {\n\t        item.cells[i] = item.cells[i]\n\t          .replace(/^ *\\| *| *\\| *$/g, '')\n\t          .split(/ *\\| */);\n\t      }\n\t\n\t      this.tokens.push(item);\n\t\n\t      continue;\n\t    }\n\t\n\t    // top-level paragraph\n\t    if (top && (cap = this.rules.paragraph.exec(src))) {\n\t      src = src.substring(cap[0].length);\n\t      this.tokens.push({\n\t        type: 'paragraph',\n\t        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n\t          ? cap[1].slice(0, -1)\n\t          : cap[1]\n\t      });\n\t      continue;\n\t    }\n\t\n\t    // text\n\t    if (cap = this.rules.text.exec(src)) {\n\t      // Top-level should never reach here.\n\t      src = src.substring(cap[0].length);\n\t      this.tokens.push({\n\t        type: 'text',\n\t        text: cap[0]\n\t      });\n\t      continue;\n\t    }\n\t\n\t    if (src) {\n\t      throw new\n\t        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n\t    }\n\t  }\n\t\n\t  return this.tokens;\n\t};\n\t\n\t/**\n\t * Inline-Level Grammar\n\t */\n\t\n\tvar inline = {\n\t  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n\t  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n\t  url: noop,\n\t  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n\t  link: /^!?\\[(inside)\\]\\(href\\)/,\n\t  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n\t  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n\t  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n\t  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n\t  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n\t  br: /^ {2,}\\n(?!\\s*$)/,\n\t  del: noop,\n\t  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n\t};\n\t\n\tinline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\n\tinline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\t\n\tinline.link = replace(inline.link)\n\t  ('inside', inline._inside)\n\t  ('href', inline._href)\n\t  ();\n\t\n\tinline.reflink = replace(inline.reflink)\n\t  ('inside', inline._inside)\n\t  ();\n\t\n\t/**\n\t * Normal Inline Grammar\n\t */\n\t\n\tinline.normal = merge({}, inline);\n\t\n\t/**\n\t * Pedantic Inline Grammar\n\t */\n\t\n\tinline.pedantic = merge({}, inline.normal, {\n\t  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n\t  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n\t});\n\t\n\t/**\n\t * GFM Inline Grammar\n\t */\n\t\n\tinline.gfm = merge({}, inline.normal, {\n\t  escape: replace(inline.escape)('])', '~|])')(),\n\t  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n\t  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n\t  text: replace(inline.text)\n\t    (']|', '~]|')\n\t    ('|', '|https?://|')\n\t    ()\n\t});\n\t\n\t/**\n\t * GFM + Line Breaks Inline Grammar\n\t */\n\t\n\tinline.breaks = merge({}, inline.gfm, {\n\t  br: replace(inline.br)('{2,}', '*')(),\n\t  text: replace(inline.gfm.text)('{2,}', '*')()\n\t});\n\t\n\t/**\n\t * Inline Lexer & Compiler\n\t */\n\t\n\tfunction InlineLexer(links, options) {\n\t  this.options = options || marked.defaults;\n\t  this.links = links;\n\t  this.rules = inline.normal;\n\t  this.renderer = this.options.renderer || new Renderer;\n\t  this.renderer.options = this.options;\n\t\n\t  if (!this.links) {\n\t    throw new\n\t      Error('Tokens array requires a `links` property.');\n\t  }\n\t\n\t  if (this.options.gfm) {\n\t    if (this.options.breaks) {\n\t      this.rules = inline.breaks;\n\t    } else {\n\t      this.rules = inline.gfm;\n\t    }\n\t  } else if (this.options.pedantic) {\n\t    this.rules = inline.pedantic;\n\t  }\n\t}\n\t\n\t/**\n\t * Expose Inline Rules\n\t */\n\t\n\tInlineLexer.rules = inline;\n\t\n\t/**\n\t * Static Lexing/Compiling Method\n\t */\n\t\n\tInlineLexer.output = function(src, links, options) {\n\t  var inline = new InlineLexer(links, options);\n\t  return inline.output(src);\n\t};\n\t\n\t/**\n\t * Lexing/Compiling\n\t */\n\t\n\tInlineLexer.prototype.output = function(src) {\n\t  var out = ''\n\t    , link\n\t    , text\n\t    , href\n\t    , cap;\n\t\n\t  while (src) {\n\t    // escape\n\t    if (cap = this.rules.escape.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      out += cap[1];\n\t      continue;\n\t    }\n\t\n\t    // autolink\n\t    if (cap = this.rules.autolink.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      if (cap[2] === '@') {\n\t        text = cap[1].charAt(6) === ':'\n\t          ? this.mangle(cap[1].substring(7))\n\t          : this.mangle(cap[1]);\n\t        href = this.mangle('mailto:') + text;\n\t      } else {\n\t        text = escape(cap[1]);\n\t        href = text;\n\t      }\n\t      out += this.renderer.link(href, null, text);\n\t      continue;\n\t    }\n\t\n\t    // url (gfm)\n\t    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n\t      src = src.substring(cap[0].length);\n\t      text = escape(cap[1]);\n\t      href = text;\n\t      out += this.renderer.link(href, null, text);\n\t      continue;\n\t    }\n\t\n\t    // tag\n\t    if (cap = this.rules.tag.exec(src)) {\n\t      if (!this.inLink && /^<a /i.test(cap[0])) {\n\t        this.inLink = true;\n\t      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n\t        this.inLink = false;\n\t      }\n\t      src = src.substring(cap[0].length);\n\t      out += this.options.sanitize\n\t        ? this.options.sanitizer\n\t          ? this.options.sanitizer(cap[0])\n\t          : escape(cap[0])\n\t        : cap[0]\n\t      continue;\n\t    }\n\t\n\t    // link\n\t    if (cap = this.rules.link.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      this.inLink = true;\n\t      out += this.outputLink(cap, {\n\t        href: cap[2],\n\t        title: cap[3]\n\t      });\n\t      this.inLink = false;\n\t      continue;\n\t    }\n\t\n\t    // reflink, nolink\n\t    if ((cap = this.rules.reflink.exec(src))\n\t        || (cap = this.rules.nolink.exec(src))) {\n\t      src = src.substring(cap[0].length);\n\t      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n\t      link = this.links[link.toLowerCase()];\n\t      if (!link || !link.href) {\n\t        out += cap[0].charAt(0);\n\t        src = cap[0].substring(1) + src;\n\t        continue;\n\t      }\n\t      this.inLink = true;\n\t      out += this.outputLink(cap, link);\n\t      this.inLink = false;\n\t      continue;\n\t    }\n\t\n\t    // strong\n\t    if (cap = this.rules.strong.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n\t      continue;\n\t    }\n\t\n\t    // em\n\t    if (cap = this.rules.em.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      out += this.renderer.em(this.output(cap[2] || cap[1]));\n\t      continue;\n\t    }\n\t\n\t    // code\n\t    if (cap = this.rules.code.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      out += this.renderer.codespan(escape(cap[2], true));\n\t      continue;\n\t    }\n\t\n\t    // br\n\t    if (cap = this.rules.br.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      out += this.renderer.br();\n\t      continue;\n\t    }\n\t\n\t    // del (gfm)\n\t    if (cap = this.rules.del.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      out += this.renderer.del(this.output(cap[1]));\n\t      continue;\n\t    }\n\t\n\t    // text\n\t    if (cap = this.rules.text.exec(src)) {\n\t      src = src.substring(cap[0].length);\n\t      out += this.renderer.text(escape(this.smartypants(cap[0])));\n\t      continue;\n\t    }\n\t\n\t    if (src) {\n\t      throw new\n\t        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n\t    }\n\t  }\n\t\n\t  return out;\n\t};\n\t\n\t/**\n\t * Compile Link\n\t */\n\t\n\tInlineLexer.prototype.outputLink = function(cap, link) {\n\t  var href = escape(link.href)\n\t    , title = link.title ? escape(link.title) : null;\n\t\n\t  return cap[0].charAt(0) !== '!'\n\t    ? this.renderer.link(href, title, this.output(cap[1]))\n\t    : this.renderer.image(href, title, escape(cap[1]));\n\t};\n\t\n\t/**\n\t * Smartypants Transformations\n\t */\n\t\n\tInlineLexer.prototype.smartypants = function(text) {\n\t  if (!this.options.smartypants) return text;\n\t  return text\n\t    // em-dashes\n\t    .replace(/---/g, '\\u2014')\n\t    // en-dashes\n\t    .replace(/--/g, '\\u2013')\n\t    // opening singles\n\t    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n\t    // closing singles & apostrophes\n\t    .replace(/'/g, '\\u2019')\n\t    // opening doubles\n\t    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n\t    // closing doubles\n\t    .replace(/\"/g, '\\u201d')\n\t    // ellipses\n\t    .replace(/\\.{3}/g, '\\u2026');\n\t};\n\t\n\t/**\n\t * Mangle Links\n\t */\n\t\n\tInlineLexer.prototype.mangle = function(text) {\n\t  if (!this.options.mangle) return text;\n\t  var out = ''\n\t    , l = text.length\n\t    , i = 0\n\t    , ch;\n\t\n\t  for (; i < l; i++) {\n\t    ch = text.charCodeAt(i);\n\t    if (Math.random() > 0.5) {\n\t      ch = 'x' + ch.toString(16);\n\t    }\n\t    out += '&#' + ch + ';';\n\t  }\n\t\n\t  return out;\n\t};\n\t\n\t/**\n\t * Renderer\n\t */\n\t\n\tfunction Renderer(options) {\n\t  this.options = options || {};\n\t}\n\t\n\tRenderer.prototype.code = function(code, lang, escaped) {\n\t  if (this.options.highlight) {\n\t    var out = this.options.highlight(code, lang);\n\t    if (out != null && out !== code) {\n\t      escaped = true;\n\t      code = out;\n\t    }\n\t  }\n\t\n\t  if (!lang) {\n\t    return '<pre><code>'\n\t      + (escaped ? code : escape(code, true))\n\t      + '\\n</code></pre>';\n\t  }\n\t\n\t  return '<pre><code class=\"'\n\t    + this.options.langPrefix\n\t    + escape(lang, true)\n\t    + '\">'\n\t    + (escaped ? code : escape(code, true))\n\t    + '\\n</code></pre>\\n';\n\t};\n\t\n\tRenderer.prototype.blockquote = function(quote) {\n\t  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n\t};\n\t\n\tRenderer.prototype.html = function(html) {\n\t  return html;\n\t};\n\t\n\tRenderer.prototype.heading = function(text, level, raw) {\n\t  return '<h'\n\t    + level\n\t    + ' id=\"'\n\t    + this.options.headerPrefix\n\t    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n\t    + '\">'\n\t    + text\n\t    + '</h'\n\t    + level\n\t    + '>\\n';\n\t};\n\t\n\tRenderer.prototype.hr = function() {\n\t  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n\t};\n\t\n\tRenderer.prototype.list = function(body, ordered) {\n\t  var type = ordered ? 'ol' : 'ul';\n\t  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n\t};\n\t\n\tRenderer.prototype.listitem = function(text) {\n\t  return '<li>' + text + '</li>\\n';\n\t};\n\t\n\tRenderer.prototype.paragraph = function(text) {\n\t  return '<p>' + text + '</p>\\n';\n\t};\n\t\n\tRenderer.prototype.table = function(header, body) {\n\t  return '<table>\\n'\n\t    + '<thead>\\n'\n\t    + header\n\t    + '</thead>\\n'\n\t    + '<tbody>\\n'\n\t    + body\n\t    + '</tbody>\\n'\n\t    + '</table>\\n';\n\t};\n\t\n\tRenderer.prototype.tablerow = function(content) {\n\t  return '<tr>\\n' + content + '</tr>\\n';\n\t};\n\t\n\tRenderer.prototype.tablecell = function(content, flags) {\n\t  var type = flags.header ? 'th' : 'td';\n\t  var tag = flags.align\n\t    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n\t    : '<' + type + '>';\n\t  return tag + content + '</' + type + '>\\n';\n\t};\n\t\n\t// span level renderer\n\tRenderer.prototype.strong = function(text) {\n\t  return '<strong>' + text + '</strong>';\n\t};\n\t\n\tRenderer.prototype.em = function(text) {\n\t  return '<em>' + text + '</em>';\n\t};\n\t\n\tRenderer.prototype.codespan = function(text) {\n\t  return '<code>' + text + '</code>';\n\t};\n\t\n\tRenderer.prototype.br = function() {\n\t  return this.options.xhtml ? '<br/>' : '<br>';\n\t};\n\t\n\tRenderer.prototype.del = function(text) {\n\t  return '<del>' + text + '</del>';\n\t};\n\t\n\tRenderer.prototype.link = function(href, title, text) {\n\t  if (this.options.sanitize) {\n\t    try {\n\t      var prot = decodeURIComponent(unescape(href))\n\t        .replace(/[^\\w:]/g, '')\n\t        .toLowerCase();\n\t    } catch (e) {\n\t      return '';\n\t    }\n\t    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n\t      return '';\n\t    }\n\t  }\n\t  var out = '<a href=\"' + href + '\"';\n\t  if (title) {\n\t    out += ' title=\"' + title + '\"';\n\t  }\n\t  out += '>' + text + '</a>';\n\t  return out;\n\t};\n\t\n\tRenderer.prototype.image = function(href, title, text) {\n\t  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\t  if (title) {\n\t    out += ' title=\"' + title + '\"';\n\t  }\n\t  out += this.options.xhtml ? '/>' : '>';\n\t  return out;\n\t};\n\t\n\tRenderer.prototype.text = function(text) {\n\t  return text;\n\t};\n\t\n\t/**\n\t * Parsing & Compiling\n\t */\n\t\n\tfunction Parser(options) {\n\t  this.tokens = [];\n\t  this.token = null;\n\t  this.options = options || marked.defaults;\n\t  this.options.renderer = this.options.renderer || new Renderer;\n\t  this.renderer = this.options.renderer;\n\t  this.renderer.options = this.options;\n\t}\n\t\n\t/**\n\t * Static Parse Method\n\t */\n\t\n\tParser.parse = function(src, options, renderer) {\n\t  var parser = new Parser(options, renderer);\n\t  return parser.parse(src);\n\t};\n\t\n\t/**\n\t * Parse Loop\n\t */\n\t\n\tParser.prototype.parse = function(src) {\n\t  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n\t  this.tokens = src.reverse();\n\t\n\t  var out = '';\n\t  while (this.next()) {\n\t    out += this.tok();\n\t  }\n\t\n\t  return out;\n\t};\n\t\n\t/**\n\t * Next Token\n\t */\n\t\n\tParser.prototype.next = function() {\n\t  return this.token = this.tokens.pop();\n\t};\n\t\n\t/**\n\t * Preview Next Token\n\t */\n\t\n\tParser.prototype.peek = function() {\n\t  return this.tokens[this.tokens.length - 1] || 0;\n\t};\n\t\n\t/**\n\t * Parse Text Tokens\n\t */\n\t\n\tParser.prototype.parseText = function() {\n\t  var body = this.token.text;\n\t\n\t  while (this.peek().type === 'text') {\n\t    body += '\\n' + this.next().text;\n\t  }\n\t\n\t  return this.inline.output(body);\n\t};\n\t\n\t/**\n\t * Parse Current Token\n\t */\n\t\n\tParser.prototype.tok = function() {\n\t  switch (this.token.type) {\n\t    case 'space': {\n\t      return '';\n\t    }\n\t    case 'hr': {\n\t      return this.renderer.hr();\n\t    }\n\t    case 'heading': {\n\t      return this.renderer.heading(\n\t        this.inline.output(this.token.text),\n\t        this.token.depth,\n\t        this.token.text);\n\t    }\n\t    case 'code': {\n\t      return this.renderer.code(this.token.text,\n\t        this.token.lang,\n\t        this.token.escaped);\n\t    }\n\t    case 'table': {\n\t      var header = ''\n\t        , body = ''\n\t        , i\n\t        , row\n\t        , cell\n\t        , flags\n\t        , j;\n\t\n\t      // header\n\t      cell = '';\n\t      for (i = 0; i < this.token.header.length; i++) {\n\t        flags = { header: true, align: this.token.align[i] };\n\t        cell += this.renderer.tablecell(\n\t          this.inline.output(this.token.header[i]),\n\t          { header: true, align: this.token.align[i] }\n\t        );\n\t      }\n\t      header += this.renderer.tablerow(cell);\n\t\n\t      for (i = 0; i < this.token.cells.length; i++) {\n\t        row = this.token.cells[i];\n\t\n\t        cell = '';\n\t        for (j = 0; j < row.length; j++) {\n\t          cell += this.renderer.tablecell(\n\t            this.inline.output(row[j]),\n\t            { header: false, align: this.token.align[j] }\n\t          );\n\t        }\n\t\n\t        body += this.renderer.tablerow(cell);\n\t      }\n\t      return this.renderer.table(header, body);\n\t    }\n\t    case 'blockquote_start': {\n\t      var body = '';\n\t\n\t      while (this.next().type !== 'blockquote_end') {\n\t        body += this.tok();\n\t      }\n\t\n\t      return this.renderer.blockquote(body);\n\t    }\n\t    case 'list_start': {\n\t      var body = ''\n\t        , ordered = this.token.ordered;\n\t\n\t      while (this.next().type !== 'list_end') {\n\t        body += this.tok();\n\t      }\n\t\n\t      return this.renderer.list(body, ordered);\n\t    }\n\t    case 'list_item_start': {\n\t      var body = '';\n\t\n\t      while (this.next().type !== 'list_item_end') {\n\t        body += this.token.type === 'text'\n\t          ? this.parseText()\n\t          : this.tok();\n\t      }\n\t\n\t      return this.renderer.listitem(body);\n\t    }\n\t    case 'loose_item_start': {\n\t      var body = '';\n\t\n\t      while (this.next().type !== 'list_item_end') {\n\t        body += this.tok();\n\t      }\n\t\n\t      return this.renderer.listitem(body);\n\t    }\n\t    case 'html': {\n\t      var html = !this.token.pre && !this.options.pedantic\n\t        ? this.inline.output(this.token.text)\n\t        : this.token.text;\n\t      return this.renderer.html(html);\n\t    }\n\t    case 'paragraph': {\n\t      return this.renderer.paragraph(this.inline.output(this.token.text));\n\t    }\n\t    case 'text': {\n\t      return this.renderer.paragraph(this.parseText());\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helpers\n\t */\n\t\n\tfunction escape(html, encode) {\n\t  return html\n\t    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n\t    .replace(/</g, '&lt;')\n\t    .replace(/>/g, '&gt;')\n\t    .replace(/\"/g, '&quot;')\n\t    .replace(/'/g, '&#39;');\n\t}\n\t\n\tfunction unescape(html) {\n\t\t// explicitly match decimal, hex, and named HTML entities \n\t  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n\t    n = n.toLowerCase();\n\t    if (n === 'colon') return ':';\n\t    if (n.charAt(0) === '#') {\n\t      return n.charAt(1) === 'x'\n\t        ? String.fromCharCode(parseInt(n.substring(2), 16))\n\t        : String.fromCharCode(+n.substring(1));\n\t    }\n\t    return '';\n\t  });\n\t}\n\t\n\tfunction replace(regex, opt) {\n\t  regex = regex.source;\n\t  opt = opt || '';\n\t  return function self(name, val) {\n\t    if (!name) return new RegExp(regex, opt);\n\t    val = val.source || val;\n\t    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n\t    regex = regex.replace(name, val);\n\t    return self;\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\tnoop.exec = noop;\n\t\n\tfunction merge(obj) {\n\t  var i = 1\n\t    , target\n\t    , key;\n\t\n\t  for (; i < arguments.length; i++) {\n\t    target = arguments[i];\n\t    for (key in target) {\n\t      if (Object.prototype.hasOwnProperty.call(target, key)) {\n\t        obj[key] = target[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t\n\t/**\n\t * Marked\n\t */\n\t\n\tfunction marked(src, opt, callback) {\n\t  if (callback || typeof opt === 'function') {\n\t    if (!callback) {\n\t      callback = opt;\n\t      opt = null;\n\t    }\n\t\n\t    opt = merge({}, marked.defaults, opt || {});\n\t\n\t    var highlight = opt.highlight\n\t      , tokens\n\t      , pending\n\t      , i = 0;\n\t\n\t    try {\n\t      tokens = Lexer.lex(src, opt)\n\t    } catch (e) {\n\t      return callback(e);\n\t    }\n\t\n\t    pending = tokens.length;\n\t\n\t    var done = function(err) {\n\t      if (err) {\n\t        opt.highlight = highlight;\n\t        return callback(err);\n\t      }\n\t\n\t      var out;\n\t\n\t      try {\n\t        out = Parser.parse(tokens, opt);\n\t      } catch (e) {\n\t        err = e;\n\t      }\n\t\n\t      opt.highlight = highlight;\n\t\n\t      return err\n\t        ? callback(err)\n\t        : callback(null, out);\n\t    };\n\t\n\t    if (!highlight || highlight.length < 3) {\n\t      return done();\n\t    }\n\t\n\t    delete opt.highlight;\n\t\n\t    if (!pending) return done();\n\t\n\t    for (; i < tokens.length; i++) {\n\t      (function(token) {\n\t        if (token.type !== 'code') {\n\t          return --pending || done();\n\t        }\n\t        return highlight(token.text, token.lang, function(err, code) {\n\t          if (err) return done(err);\n\t          if (code == null || code === token.text) {\n\t            return --pending || done();\n\t          }\n\t          token.text = code;\n\t          token.escaped = true;\n\t          --pending || done();\n\t        });\n\t      })(tokens[i]);\n\t    }\n\t\n\t    return;\n\t  }\n\t  try {\n\t    if (opt) opt = merge({}, marked.defaults, opt);\n\t    return Parser.parse(Lexer.lex(src, opt), opt);\n\t  } catch (e) {\n\t    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n\t    if ((opt || marked.defaults).silent) {\n\t      return '<p>An error occured:</p><pre>'\n\t        + escape(e.message + '', true)\n\t        + '</pre>';\n\t    }\n\t    throw e;\n\t  }\n\t}\n\t\n\t/**\n\t * Options\n\t */\n\t\n\tmarked.options =\n\tmarked.setOptions = function(opt) {\n\t  merge(marked.defaults, opt);\n\t  return marked;\n\t};\n\t\n\tmarked.defaults = {\n\t  gfm: true,\n\t  tables: true,\n\t  breaks: false,\n\t  pedantic: false,\n\t  sanitize: false,\n\t  sanitizer: null,\n\t  mangle: true,\n\t  smartLists: false,\n\t  silent: false,\n\t  highlight: null,\n\t  langPrefix: 'lang-',\n\t  smartypants: false,\n\t  headerPrefix: '',\n\t  renderer: new Renderer,\n\t  xhtml: false\n\t};\n\t\n\t/**\n\t * Expose\n\t */\n\t\n\tmarked.Parser = Parser;\n\tmarked.parser = Parser.parse;\n\t\n\tmarked.Renderer = Renderer;\n\t\n\tmarked.Lexer = Lexer;\n\tmarked.lexer = Lexer.lex;\n\t\n\tmarked.InlineLexer = InlineLexer;\n\tmarked.inlineLexer = InlineLexer.output;\n\t\n\tmarked.parse = marked;\n\t\n\tif (true) {\n\t  module.exports = marked;\n\t} else if (typeof define === 'function' && define.amd) {\n\t  define(function() { return marked; });\n\t} else {\n\t  this.marked = marked;\n\t}\n\t\n\t}).call(function() {\n\t  return this || (typeof window !== 'undefined' ? window : global);\n\t}());\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 199:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=editor> <div class=editor-editarea> <textarea class=editorinput name=\\\"\\\" id=\\\"\\\" cols=30 rows=10 v-model=input></textarea> <div class=html v-html=\\\"input | markRender\\\"></div> </div> </div> \";\n\n/***/ },\n\n/***/ 200:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <editor></editor> \";\n\n/***/ },\n\n/***/ 206:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(145)\n\t__vue_script__ = __webpack_require__(93)\n\t__vue_template__ = __webpack_require__(199)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 207:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(148)\n\t__vue_script__ = __webpack_require__(94)\n\t__vue_template__ = __webpack_require__(200)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** static/js/0.5fe59225de85e691b020.js\n **/","<style lang='scss'>\n  .editor{\n    width: 100%;\n    height:100%;\n    .editor-editarea{\n      display: -webkit-box;\n      textarea.editorinput{\n        width:50%;\n        display: block;\n        border:1px solid #ccc;\n        -webkit-box-flex:1;\n        padding:20px;\n      }\n      .html{\n        width:50%;\n        border:1px solid #000;\n        -webkit-box-flex:1;\n        padding:0 20px;\n        overflow-y: scroll;\n      }\n    }\n    \n    .editor-header{\n      height:160px;\n      display: block;\n    }\n  }\n</style>\n<template>\n  <div class=\"editor\">\n      <div class=\"editor-editarea\">\n        <textarea class=\"editorinput\" name=\"\" id=\"\" cols=\"30\" rows=\"10\" v-model=\"input\"></textarea>\n        <div class=\"html\" v-html=\"input | markRender\"></div>\n      </div>\n  </div>\n</template>\n<script>\nimport marked from 'marked'\nlet renderer = new marked.Renderer()\nlet styleList = {\n  title: {\n    h1: 'text-align:center;font-size:20px;margin-top:50px;margin-bottom:20px;',\n    h2: 'text-align:center;font-size:18px;margin-top:50px;margin-bottom:20px',\n    h3: 'text-align:center;font-size:16px;margin-top:40px;margin-bottom:10px',\n    h4: 'text-align:center;font-size:14px;margin-top:50px;'\n  },\n  paragraph: 'font-size:15px;color:#777;line-height:1.75;text-align:justify;margin-top:30px;margin-bottom:30px',\n  image: {\n    wrap: 'padding:0.05rem;border-width:1px;border-style:solid;border-color:#ccc;',\n    img: 'width:100%;height:auto;vertical-align:top',\n    txt: 'color:#ccc;font-size:.7rem;text-align:center;line-height:1.5;margin:1px 0;display:block'\n  },\n  blockquote: {\n    wrap: 'background:#e7e7e7;color:#666;padding:20px;padding-top:10px;padding-bottom:10px;margin:0;font-size:14px;line-height:1.5;overflow:hidden;margin-bottom:30px',\n    quote: 'font-size:50px;height:30px;margin-top:10px;color:#aaa9a9;font-family:Georgia,serif;float:left;margin-right:10px;',\n    txt: 'display:block;overflow:hidden;color:#979797;text-align:justify'\n  },\n  list: {\n    wrap: 'text-align:justify;margin-top:30px;margin-bottom:30px;font-size:14px;color:#999;background:#fafafa;padding:10px;padding-left:20px;padding-right:20px;border-width:6px;border-style:solid;border-color:#ececec',\n    item: {\n      wrap: 'display:block;margin-top:20px;margin-bottom:20px;',\n      point: 'display:block;float:left;line-height:1.5;margin-right:10px;',\n      txt: 'overflow:hidden;line-height:1.5;display:block'\n    }\n\n  }\n}\n\nrenderer.heading = (text, level) => {\n  let style = ''\n  switch (level) {\n    case 1:\n      style = styleList.title.h1\n      break\n    case 2:\n      style = styleList.title.h2\n      break\n    case 3:\n      style = styleList.title.h3\n      break\n    case 4:\n      style = styleList.title.h4\n      break\n    default:\n      style = styleList.title.h2\n      break\n  }\n\n  return '<h' + level + ' style=\"' + style + '\">' + text + '</h' + level + '>'\n}\n\nrenderer.paragraph = (text) => {\n  let style = styleList.paragraph\n  return '<p style=' + style + '>' + text + '</p>'\n}\n\nrenderer.image = (url, title, text) => {\n  let { wrap, img, txt } = styleList.image\n  let textHtml = ''\n  text ? textHtml = '<span style=' + txt + '>' + text + '</span>' : textHtml = ''\n  return '<p style=' + wrap + '><img src=' + url + ' style=' + img + '>' + textHtml + '</p>'\n}\n\nrenderer.blockquote = (text) => {\n  let { wrap, quote, txt } = styleList.blockquote\n  return '<blockquote style=' + wrap + '><strong style=' + quote + '>“</strong><em style=' + txt + '>' + text + '</em></blockqoute>'\n}\n\nrenderer.list = (body, ordered) => {\n  let style = styleList.list.wrap\n  ordered ? console.log(1) : console.log(2)\n  return '<p style=' + style + '>' + body + '</p>'\n}\nrenderer.listitem = (list) => {\n  let { wrap, point, txt } = styleList.list.item\n  console.log(this)\n  return '<span style=' + wrap + '><span style=' + point + '>・</span><span style=' + txt + '>' + list + '</span>'\n}\n\nexport default {\n  data () {\n    return {\n      input: ''\n    }\n  },\n  filters: {\n    marked: marked,\n    markRender (val) {\n      return marked(val, {\n        renderer: renderer\n      })\n    }\n  },\n  methods: {\n    setStyle (event) {\n      console.log(event.target.attributes[1])\n      styleList.title.h1 = event.target.attributes[1].nodeValue\n    }\n  },\n  ready () {\n    let $ = el => document.querySelector(el)\n    $('.html').style.height = $('.editorinput').style.height = document.body.clientHeight + 'px'\n  }\n}\n\n</script>\n\n\n/** WEBPACK FOOTER **\n ** editor.vue?75cb9d85\n **/","<template>\n  <editor></editor>\n</template>\n<script>\nimport editor from '../components/editor'\nexport default {\n  data () {\n    return {\n      test: 'test'\n    }\n  },\n  components: {\n    editor\n  }\n}\n</script>\n<style>\n  p{\n    color:#000;\n  }\n</style>\n\n\n/** WEBPACK FOOTER **\n ** editor.vue?243a2ed8\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".editor{width:100%;height:100%}.editor .editor-editarea{display:-webkit-box}.editor .editor-editarea textarea.editorinput{width:50%;display:block;border:1px solid #ccc;-webkit-box-flex:1;padding:20px}.editor .editor-editarea .html{width:50%;border:1px solid #000;-webkit-box-flex:1;padding:0 20px;overflow-y:scroll}.editor .editor-header{height:160px;display:block}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/editor.vue\"],\"names\":[],\"mappings\":\"AAAA,QAAQ,WAAW,WAAW,CAAC,yBAAyB,mBAAmB,CAAC,8CAA8C,UAAU,cAAc,sBAAsB,mBAAmB,YAAY,CAAC,+BAA+B,UAAU,sBAAsB,mBAAmB,eAAe,iBAAiB,CAAC,uBAAuB,aAAa,aAAa,CAAC\",\"file\":\"editor.vue\",\"sourcesContent\":[\".editor{width:100%;height:100%}.editor .editor-editarea{display:-webkit-box}.editor .editor-editarea textarea.editorinput{width:50%;display:block;border:1px solid #ccc;-webkit-box-flex:1;padding:20px}.editor .editor-editarea .html{width:50%;border:1px solid #000;-webkit-box-flex:1;padding:0 20px;overflow-y:scroll}.editor .editor-header{height:160px;display:block}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/sass-loader?sourceMap!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/editor.vue\n ** module id = 141\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"p{color:#000}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/editor.vue\"],\"names\":[],\"mappings\":\"AAiBA,EACE,UAAW,CACZ\",\"file\":\"editor.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\np{\\n  color:#000;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/editor.vue\n ** module id = 142\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/sass-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/sass-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/sass-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/sass-loader?sourceMap!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/editor.vue\n ** module id = 145\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/editor.vue\n ** module id = 148\n ** module chunks = 0\n **/","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities \n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/marked/lib/marked.js\n ** module id = 151\n ** module chunks = 0\n **/","module.exports = \" <div class=editor> <div class=editor-editarea> <textarea class=editorinput name=\\\"\\\" id=\\\"\\\" cols=30 rows=10 v-model=input></textarea> <div class=html v-html=\\\"input | markRender\\\"></div> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/editor.vue\n ** module id = 199\n ** module chunks = 0\n **/","module.exports = \" <editor></editor> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/editor.vue\n ** module id = 200\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!sass-loader?sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./editor.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./editor.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/editor.vue\n ** module id = 206\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./editor.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./editor.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./editor.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/editor.vue\n ** module id = 207\n ** module chunks = 0\n **/"],"sourceRoot":""}